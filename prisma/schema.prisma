// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  password String?
  product Product[]
  cart Cart[]
  review Review[]
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String @db.String
  category String
  size String
  color String
  price Int
  brand String
  style String
  inventory Int
  images String @db.String
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  cart Cart[]
  review Review[]
  @@index([userId])
}

model Cart {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([productId])
  @@index([userId])
}

model Review {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  rating Int
  comment String
  productId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([productId])
  @@index([userId])
}